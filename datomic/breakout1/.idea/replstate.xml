<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1445044635157">{:repl-history {:ide [], :local [&quot;(def uri \&quot;datomic:mem://localhost:4334/contacts\&quot;)&quot; &quot;(d/create-database uri)&quot; &quot;(def conn (d/connect uri))&quot; &quot;(d/transact\n    conn\n    (read-string (slurp (io/resource \&quot;data/schema.edn\&quot;))))&quot; &quot;(map\n    #(d/transact conn %)\n    (read-string\n      (slurp (io/resource \&quot;data/initial.edn\&quot;))))&quot; &quot;(d/q '[:find ?ln\n         :where\n         [_ :person/last-name ?ln]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?fn ?ln\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name ?ln]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?e ?ln\n         :where\n         [?e :person/first-name \&quot;Kovas\&quot;]\n         [?e :person/last-name ?ln]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?e ?fn\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name \&quot;Boguta\&quot;]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?fn ?ln\n         :where\n         [_ :person/first-name ?fn]\n         [_ :person/last-name ?ln]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?name\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name ?ln]\n         [(str ?fn \&quot; \&quot; ?ln) ?name]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?e ?fn\n         :where\n         [?e :person/first-name ?fn]\n         (not [?e :person/last-name \&quot;Smith\&quot;])]\n       (d/db conn))&quot; &quot;(d/q '[:find ?e ?fn\n         :where\n         [?e :person/first-name ?fn]\n         (not (not [?e :person/last-name \&quot;Smith\&quot;]))]\n       (d/db conn))&quot; &quot;(d/q '[:find ?fn ?ln\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name ?ln]\n         [?e :person/telephone _]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?fn ?ln\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name ?ln]\n         [?e :person/address _]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?fn ?ln\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name ?ln]\n         [?e :person/telephone _]\n         [?e :person/address _]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?fn ?ln\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name ?ln]\n         (or\n           [?e :person/telephone _]\n           [?e :person/address _])]\n       (d/db conn))&quot; &quot;(d/q '[:find ?fn ?ln\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name ?ln]\n         (not\n           (or\n             [?e :person/telephone _]\n             [?e :person/address _]))]\n       (d/db conn))&quot; &quot;(d/q '[:find ?fn ?ln ?c\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name ?ln]\n         [?e :person/address ?a]\n         [?a :address/city ?c]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?fn ?ln\n         :where\n         [?e :person/first-name ?fn]\n         [?e :person/last-name ?ln]\n         [?e :person/address ?a]\n         [?a :address/city \&quot;Brooklyn\&quot;]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?c\n         :where\n         [?a :address/city ?c]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?ea\n         :where\n         [?a :address/city \&quot;Brooklyn\&quot;]\n         [?p :person/address ?a]\n         [?p :person/email ?e]\n         [?e :email/address  ?ea]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?on ?fn ?ln\n         :where\n         [?p :person/first-name \&quot;David\&quot;]\n         [?p :person/last-name \&quot;Nolen\&quot;]\n         [?p :person/org ?o]\n         [?o :org/name ?on]\n         [?p2 :person/org ?o]\n         [?p2 :person/first-name ?fn]\n         [?p2 :person/last-name ?ln]]\n       (d/db conn))&quot; &quot;(d/q '[:find ?e\n         :in $ ?ln\n         :where\n         [?e :person/last-name ?ln]]\n       (d/db conn) \&quot;Boguta\&quot;)&quot; &quot;(d/q '[:find ?fn ?ln\n         :in $ [?ln ...]\n         :where\n         [?e :person/last-name ?ln]\n         [?e :person/first-name ?fn]]\n       (d/db conn) [\&quot;Boguta\&quot; \&quot;Nolen\&quot;])&quot; &quot;(d/q '[:find ?day ?fn ?ln\n         :in $ [[?day ?ln]]\n         :where\n         [?e :person/last-name ?ln]\n         [?e :person/first-name ?fn]]\n       (d/db conn) {:day1 \&quot;Boguta\&quot; :day2 \&quot;Nolen\&quot;})&quot; &quot;(def kovas-entity\n    (ffirst\n      (d/q '[:find ?e\n             :where\n             [?e :person/last-name \&quot;Boguta\&quot;]]\n           (d/db conn))))&quot; &quot;(d/pull\n    (d/db conn)\n    '[*]\n    kovas-entity)&quot; &quot;(d/pull\n    (d/db conn)\n    [:person/first-name]\n    kovas-entity)&quot; &quot;(d/pull\n    (d/db conn)\n    [:person/first-name :person/last-name :person/address]\n    kovas-entity)&quot; &quot;(d/pull\n    (d/db conn)\n    [:person/first-name :person/last-name {:person/address [:address/city]}]\n    kovas-entity)&quot; &quot;(d/q '[:find (pull ?e [*])\n         :where\n         [?e :person/address ?a]\n         [?a :address/city \&quot;Brooklyn\&quot;]]\n       (d/db conn))&quot; &quot;(d/q '[:find (pull ?e patt)\n         :in $ patt\n         :where\n         [?e :person/address ?a]\n         [?a :address/city \&quot;Brooklyn\&quot;]]\n       (d/db conn)\n       '[*])&quot;], :remote []}}</component>
</project>